name: CI/CD - Infraestrutura de Banco de Dados (RDS)

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  TF_WORKING_DIR: .
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

jobs:
  plan:
    name: "Terraform Plan - DB"
    runs-on: ubuntu-latest

    steps:
      - name: 1. Checkout Código
        uses: actions/checkout@v4

      - name: 2. Configurar AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}

      - name: 3. Configurar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: 4. Terraform Init, Validate, Plan
        run: |
          terraform init
          terraform validate
          terraform plan -no-color -input=false -out=tfplan
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_db_name: "soatdb"
          TF_VAR_username: "eduardo"
          TF_VAR_vpc_id: "vpc-03f48d83e7a4bde63" # TODO: Remover e deixar dinamico
          TF_VAR_subnet_ids: '["subnet-06d4a0b2a86c5f2ec", "subnet-00adfcd608ec14bfd"]' # TODO: Remover e deixar dinamico

      - name: 5. Salvar Plan File
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

      - name: 6. Exibir Plan no Pull Request (Apenas PR)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6

  apply:
    name: "Terraform Apply"
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [plan]

    steps:
      - name: 1. Checkout Código
        uses: actions/checkout@v4

      - name: 2. Configurar AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}

      - name: 3. Configurar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: 4. Terraform Init
        run: terraform init

      - name: 5. Baixar Plan File
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: 5. Terraform Apply
        run: terraform apply -auto-approve tfplan
